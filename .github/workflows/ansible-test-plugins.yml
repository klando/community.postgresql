---
# GHA syntax ref:
# https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions
name: Plugins CI
on:
  push:
    paths:
    - 'plugins/**'
    - 'tests/**'
    - '.github/workflows/ansible-test-plugins.yml'
  pull_request:
    paths:
    - 'plugins/**'
    - 'tests/**'
    - '.github/workflows/ansible-test-plugins.yml'

# Versions requirements:
# https://github.com/ansible-collections/overview/blob/main/collection_requirements.rst#python-compatibility
env:
  pg_version_file: "./tests/integration/targets/setup_postgresql_db/defaults/main.yml"

# All test are run ubuntu 20.04 currently because the main purpose is to evaluate
# PostgreSQL versions more than all python/ansible combo per OS.
jobs:
  integration:
    name: "I9n: ${{ matrix.docker-image }}:${{ matrix.target }} pg-${{ matrix.postgresql }} ansible-${{ matrix.ansible }} ansible-py-${{ matrix.controller-python }}"
    runs-on: ubuntu-20.04
    strategy:
      # Default value, no point in getting a full run if there is an error.
      fail-fast: false
      matrix:
        # define the version of ansible we're testing the collection with
        ansible:
        - stable-2.9   # EOL May 2022
        - stable-2.10  # EOL May 2022
        - stable-2.11  # EOL May 2022
        # FIXME: broken on 2.21 and devel:
        #- stable-2.12  # EOL May 2023
        #- devel
        # define the version of python on the controller
        controller-python:
        - 3.8
        #- 3.9 # FIXME not yet supported ?
        # define the version of python on the managed host
        #managed-python:
        #- 2.7
        #- 3.5
        #- 3.6
        #- 3.7
        #- 3.8
        #- 3.9
        # define docker images for managed host
        docker-image:
        # python2:
        - centos6
        - centos7
        #- opensuse15py2    # FIXME not suported by integration test yet
        # python3:
        #- alpine3    # FIXME no package for Alpine (build from source ?)
        - centos8
        - fedora32
        - fedora33
        #- opensuse15
        - ubuntu1804
        - ubuntu2004
        # define a special matrix for older python versions on older ansible stable versions
        #include:
        #- python: 2.7
          #ansible: stable-2.9
        #- python: 3.5
          #ansible: stable-2.10
        #- python: 3.6
          #ansible: stable-2.10
        #- python: 3.7
          #ansible: stable-2.10
        # define the versions of PostgreSQL we're going to test
        postgresql:
        #- 9.6  # EOL November 11, 2021
        #- 10   # EOL November 10, 2022
        #- 11   # EOL November 9,  2023
        #- 12   # EOL November 14, 2024
        - 13   # EOL November 13, 2025
        - 14   # EOL November 12, 2026
        # define test target:
        target:
        - postgresql_ping

    steps:
    - name: Perform integration testing with ansible-test
      uses: klando/ansible-test-gh-action@unstable/v1
      with:
        ansible-core-version: ${{ matrix.ansible }}
        docker-image: ${{ matrix.docker-image }}
        pre-test-cmd: "ls -al && sed -i 's/^pg_version:.*/pg_version: \"${{ matrix.postgresql }}\"/g' ${{ env.pg_version_file }}"
        python-version: ${{ matrix.controller-python }}
        target: ${{ matrix.target }}
        #target-python-version: ${{ matrix.managed-python }}
        testing-type: integration
        test-deps: community.general

---
name: Ansible Collection Workflow
on:
  workflow_call:
    inputs:
      fail-fast:
        default: true
        description: GitHubAction parameter for jobs strategy
        required: false
        type: boolean
      pre-test-cmd:
        default:
        description: Parameter for action paths-filter
        required: false
        type: string
      runs-on:
        default: 'ubuntu-latest'
        description: docker image to run GHA
        type: string
        required: false
      test-deps:
        default:
        description: Parameter for ansible-test-gh-action
        type: string
        required: false
      test-docker:
        default: true
        description: Test on all docker images
        type: boolean
        required: false
      test-python:
        default: true
        description: Test on all python versions (target)
        type: boolean
        required: false
      testing-type:
        default: integration
        description: Parameter for ansible-test-gh-action
        type: string
        required: true

jobs:
  plugins:
    runs-on: ${{ inputs.runs-on }}
    outputs:
      modules: ${{ steps.find.outputs.modules }}
      module_utils: ${{ steps.find.outputs.module_utils }}
      targets: ${{ steps.find.outputs.targets }}
      nottargets: ${{ steps.find.outputs.nottargets }}
      filters: ${{ steps.find.outputs.filters }}
    steps:
    - uses: actions/checkout@v2
      if: ${{ github.event_name != 'pull_request' }}
    # Return list of modules, module_utils
    - name: Open an expandable block of code
      run: >-
        echo ::group::Find modules and module_utils
      shell: bash
    - name: Find modules and module_utils
      id: find
      run: >-
        echo Finding files...
        ; files=($(basename -a $(find ./plugins/modules/*.py -type f)))
        ; modules=${files[@]%.py}
        ; echo "Modules: ${modules}"
        ; echo "::set-output name=modules::${modules}"
        ; files=($(basename -a $(find ./plugins/module_utils/*.py -type f)))
        ; module_utils=${files[@]%.py}
        ; echo "Module_utils: ${module_utils}"
        ; echo "::set-output name=module_utils::${module_utils}"
        ; dirs=($(find ./tests/integration/targets/ -mindepth 1 -maxdepth 1 -type d -exec test -e '{}'/aliases \; -printf '%f '))
        ; targets=${dirs[@]}
        ; echo "Targets: ${targets}"
        ; echo "::set-output name=targets::${targets}"
        ; dirs=($(find ./tests/integration/targets/ -mindepth 1 -maxdepth 1 -type d -not -exec test -e '{}'/aliases \;  -printf "%p "))
        ; nottargets=${dirs[@]}
        ; echo "Nottargets: ${nottargets}"
        ; echo "::set-output name=nottargets::${nottargets}"
        ; filters=
        ; for m in ${modules}
        ;  do l=("plugins/modules/$m tests/integration/targets/$m/**" "plugins/module_utils/**" ${nottargets[@]}) filters+="$m:$(jq --compact-output --null-input '$ARGS.positional' --args \"${l[@]}\"),"
        ;  done
        ; filters="{${filters%?}}"
        ; echo "Filters: ${filters}"
        ; echo "::set-output name=filters::${filters}"
      shell: bash
      #;  do filter="\"$m\":[\"plugins/modules/$m\",\"tests/integration/targets/$m/**\",\"plugins/module_utils/**\",\"${${nottargets[@]#\",\"}%???}\"]" filters+="${filter},"
    - name: Close an expandable block of code
      run: >-
        echo ::endgroup::
      shell: bash

  #deps:
    #runs-on: ${{ inputs.runs-on }}
    #outputs:
      #filters: ${{ steps.filter.outputs.changes }}
    #steps:
    #- uses: actions/checkout@v2
      #if: ${{ github.event_name != 'pull_request' }}
    ## Run change detection to build tests
    #- uses: dorny/paths-filter@v2
      #id: filter
      #with:
        #filters: '.github/filters.yml'

  changes:
    needs:
    #- deps
    - plugins
    runs-on: ${{ inputs.runs-on }}
    outputs:
      targets: ${{ steps.filter.outputs.changes }}
    steps:
    - uses: actions/checkout@v2
      if: ${{ github.event_name != 'pull_request' }}
    # Run change detection to build tests jobs
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: ${{ fromJSON(steps.find.outputs.filters) }}

  test-python:
    if: inputs.test-python
    name: "${{ matrix.target-python-version }} | ${{ matrix.ansible-core-version }} | ${{ matrix.python-version }}"
    needs: changes
    runs-on: ${{ inputs.runs-on }}
    steps:
    - name: "ansible-test ${{ inputs.testing-type }} ${{ join(fromJSON(needs.changes.outputs.targets), ' ') }}"
      uses: ansible-community/ansible-test-gh-action@release/v1.3
      with:
        ansible-core-version: ${{ matrix.ansible-core-version }}
        pre-test-cmd: ${{ inputs.pre-test-cmd }}
        python-version: ${{ matrix.python-version }}
        target: ${{ join(fromJSON(needs.changes.outputs.targets), ' ') }}
        target-python-version: ${{ matrix.target-python-version }}
        testing-type: ${{ inputs.testing-type }}
        test-deps: ${{ inputs.test-deps }}
    strategy:
      fail-fast: ${{ inputs.fail-fast }}
      matrix:
        # https://docs.ansible.com/ansible/devel/reference_appendices/release_and_maintenance.html#ansible-core-changelogs
        ansible-core-version:
        - stable-2.9       # EOL May 2022
        - stable-2.10      # EOL May 2022
        - stable-2.11      # EOL May 2022
        - stable-2.12      # EOL May 2023
        - devel
        python-version:
        - 3.8
        target-python-version:
        - 3.9
        - 3.8
        - 3.7
        - 3.6
        - 3.5
        - 2.7
        - 2.6
        exclude:
        - ansible-core-version: stable-2.9
          target-python-version: 3.9
        - ansible-core-version: stable-2.9
          target-python-version: 3.10
        - ansible-core-version: stable-2.10
          target-python-version: 3.10
        - ansible-core-version: stable-2.11
          target-python-version: 3.10
        - ansible-core-version: devel
          target-python-version: 2.6

  test-docker:
    if: inputs.test-docker && inputs.testing-type != 'sanity'
    name: "${{ matrix.docker-image }} | ${{ matrix.ansible-core-version }} | ${{ matrix.python-version }}"
    needs: changes
    runs-on: ${{ inputs.runs-on }}
    steps:
    - name: "ansible-test ${{ inputs.testing-type }} ${{ join(fromJSON(needs.changes.outputs.targets), ' ') }}"
      uses: ansible-community/ansible-test-gh-action@release/v1.3
      with:
        ansible-core-version: ${{ matrix.ansible-core-version }}
        docker-image: ${{ matrix.docker-image }}
        pre-test-cmd: ${{ inputs.pre-test-cmd }}
        python-version: ${{ matrix.python-version }}
        target: ${{ join(fromJSON(needs.changes.outputs.targets), ' ') }}
        testing-type: ${{ inputs.testing-type }}
        test-deps: ${{ inputs.test-deps }}
    strategy:
      fail-fast: ${{ inputs.fail-fast }}
      matrix:
        # https://docs.ansible.com/ansible/devel/reference_appendices/release_and_maintenance.html#ansible-core-changelogs
        ansible-core-version:
        - stable-2.9       # EOL May 2022
        - stable-2.10      # EOL May 2022
        - stable-2.11      # EOL May 2022
        - stable-2.12      # EOL May 2023
        - devel
        python-version:
        - 3.8
        # devel: https://github.com/ansible/ansible/blob/devel/test/lib/ansible_test/_data/completion/docker.txt
        docker-image:
        - alpine3                        # python 3.9
        - centos6                        # python 2.6
        - centos7                        # python 2.7
        - centos8                        # python 3.6
        - fedora34                       # python 3.9
        - opensuse15py2                  # python 2.7
        - opensuse15                     # python 3.6
        - ubuntu1804                     # python 3.6
        - ubuntu2004                     # python 3.8

        include:
        - ansible-core-version: stable-2.9
          docker-image: fedora30         # python 3.7
          python-version: 3.8
        - ansible-core-version: stable-2.9
          docker-image: fedora31         # python 3.7
          python-version: 3.8
        - ansible-core-version: stable-2.9
          docker-image: ubuntu1604       # python 2.7
          python-version: 3.8
        - ansible-core-version: stable-2.10
          docker-image: fedora30         # python 3.7
          python-version: 3.8
        - ansible-core-version: stable-2.10
          docker-image: fedora31         # python 3.7
          python-version: 3.8
        - ansible-core-version: stable-2.10
          docker-image: fedora32         # python 3.8
          python-version: 3.8
        - ansible-core-version: stable-2.10
          docker-image: ubuntu1604       # python 2.7
          python-version: 3.8
        - ansible-core-version: stable-2.11
          docker-image: fedora32         # python 3.8
          python-version: 3.8
        - ansible-core-version: stable-2.11
          docker-image: fedora33         # python 3.9
          python-version: 3.8
        - ansible-core-version: stable-2.12
          docker-image: centos6          # python 2.6
          python-version: 3.8
        - ansible-core-version: stable-2.12
          docker-image: fedora33         # python 3.9
          python-version: 3.8
        - ansible-core-version: devel
          docker-image: fedora35         # python 3.10
          python-version: 3.8

        exclude:
        - ansible-core-version: stable-2.9
          docker-image: alpine3
        - ansible-core-version: stable-2.9
          docker-image: fedora34
        - ansible-core-version: stable-2.9
          docker-image: ubuntu2004
        - ansible-core-version: stable-2.10
          docker-image: alpine3
        - ansible-core-version: stable-2.10
          docker-image: fedora34
        - ansible-core-version: stable-2.11
          docker-image: fedora34
        - ansible-core-version: devel
          docker-image: centos6
        - ansible-core-version: devel
          docker-image: centos8
